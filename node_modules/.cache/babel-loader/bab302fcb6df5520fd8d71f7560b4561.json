{"ast":null,"code":"const KEYS = {\n  studentRecords: 'studentRecords',\n  studentRecordId: 'studentRecordId'\n};\nexport function insertStudentRecords(data) {\n  let studentRecords = getAllStudentRecords();\n  data['id'] = generateStudentRecordId();\n  localStorage.setItem(KEYS.studentRecords, JSON.stringify(data));\n}\nexport function getAllStudentRecords() {\n  if (localStorage.getItem(KEYS.studentRecords) == null) localStorage.setItem(KEYS.studentRecords, JSON.stringify([]));\n  return JSON.parse(localStorage.getItem(KEYS.studentRecords));\n}\nexport function deleteStudentRecord(id) {\n  let studentRecord = getAllStudentRecords();\n  studentRecord = studentRecord.filter(x => x.id != id);\n  localStorage.setItem(KEYS.studentRecords, JSON.stringify(studentRecord));\n}\nexport function generateStudentRecordId() {\n  if (localStorage.getItem(KEYS.studentRecordId) == null) localStorage.setItem(KEYS.studentRecordId, '0');\n  var id = parseInt(localStorage.getItem(KEYS.studentRecordId));\n  localStorage.setItem(KEYS.studentRecordId, (++id).toString());\n  return id;\n}","map":{"version":3,"sources":["C:/Aks/projects/student-records/src/services/studentRecordService.js"],"names":["KEYS","studentRecords","studentRecordId","insertStudentRecords","data","getAllStudentRecords","generateStudentRecordId","localStorage","setItem","JSON","stringify","getItem","parse","deleteStudentRecord","id","studentRecord","filter","x","parseInt","toString"],"mappings":"AAAA,MAAMA,IAAI,GAAG;AACTC,EAAAA,cAAc,EAAE,gBADP;AAETC,EAAAA,eAAe,EAAE;AAFR,CAAb;AAKA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAmC;AACtC,MAAIH,cAAc,GAAGI,oBAAoB,EAAzC;AACAD,EAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaE,uBAAuB,EAApC;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqBR,IAAI,CAACC,cAA1B,EAA0CQ,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA1C;AACH;AAED,OAAO,SAASC,oBAAT,GAA+B;AAClC,MAAGE,YAAY,CAACI,OAAb,CAAqBX,IAAI,CAACC,cAA1B,KAA6C,IAAhD,EACIM,YAAY,CAACC,OAAb,CAAqBR,IAAI,CAACC,cAA1B,EAA0CQ,IAAI,CAACC,SAAL,CAAe,EAAf,CAA1C;AAEJ,SAAOD,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACI,OAAb,CAAqBX,IAAI,CAACC,cAA1B,CAAX,CAAP;AACH;AAED,OAAO,SAASY,mBAAT,CAA6BC,EAA7B,EAAgC;AACnC,MAAIC,aAAa,GAAEV,oBAAoB,EAAvC;AACAU,EAAAA,aAAa,GAAGA,aAAa,CAACC,MAAd,CAAqBC,CAAC,IAAIA,CAAC,CAACH,EAAF,IAAOA,EAAjC,CAAhB;AACAP,EAAAA,YAAY,CAACC,OAAb,CAAqBR,IAAI,CAACC,cAA1B,EAA0CQ,IAAI,CAACC,SAAL,CAAeK,aAAf,CAA1C;AACH;AAED,OAAO,SAAST,uBAAT,GAAkC;AACrC,MAAGC,YAAY,CAACI,OAAb,CAAqBX,IAAI,CAACE,eAA1B,KAA8C,IAAjD,EACIK,YAAY,CAACC,OAAb,CAAqBR,IAAI,CAACE,eAA1B,EAA2C,GAA3C;AAEJ,MAAIY,EAAE,GAAGI,QAAQ,CAACX,YAAY,CAACI,OAAb,CAAqBX,IAAI,CAACE,eAA1B,CAAD,CAAjB;AACAK,EAAAA,YAAY,CAACC,OAAb,CAAqBR,IAAI,CAACE,eAA1B,EAA2C,CAAC,EAAEY,EAAH,EAAOK,QAAP,EAA3C;AAEA,SAAOL,EAAP;AACH","sourcesContent":["const KEYS = {\r\n    studentRecords: 'studentRecords',\r\n    studentRecordId: 'studentRecordId'\r\n}\r\n\r\nexport function insertStudentRecords(data){\r\n    let studentRecords = getAllStudentRecords();\r\n    data['id'] = generateStudentRecordId()\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(data));\r\n}\r\n\r\nexport function getAllStudentRecords(){\r\n    if(localStorage.getItem(KEYS.studentRecords) == null)\r\n        localStorage.setItem(KEYS.studentRecords, JSON.stringify([]))\r\n    \r\n    return JSON.parse(localStorage.getItem(KEYS.studentRecords));\r\n}\r\n\r\nexport function deleteStudentRecord(id){\r\n    let studentRecord =getAllStudentRecords();\r\n    studentRecord = studentRecord.filter(x => x.id !=id);\r\n    localStorage.setItem(KEYS.studentRecords, JSON.stringify(studentRecord));\r\n}\r\n\r\nexport function generateStudentRecordId(){\r\n    if(localStorage.getItem(KEYS.studentRecordId) == null)\r\n        localStorage.setItem(KEYS.studentRecordId, '0')\r\n\r\n    var id = parseInt(localStorage.getItem(KEYS.studentRecordId))\r\n    localStorage.setItem(KEYS.studentRecordId, (++id).toString())\r\n\r\n    return id;\r\n}"]},"metadata":{},"sourceType":"module"}