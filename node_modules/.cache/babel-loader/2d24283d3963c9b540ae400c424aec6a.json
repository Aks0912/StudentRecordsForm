{"ast":null,"code":"var _jsxFileName = \"C:\\\\Aks\\\\projects\\\\student-records\\\\src\\\\components\\\\useForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useForm(initializeFValues) {\n  _s();\n\n  let validateOnChange = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let validate = arguments.length > 2 ? arguments[2] : undefined;\n  const [values, setValues] = useState(initializeFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n    if (validateOnChange) validate({\n      [name]: value\n    });\n  };\n\n  const restForm = () => {\n    setValues(initializeFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    restForm\n  };\n}\n\n_s(useForm, \"zpB7kySzhgT+JHv9NHMhzNM4XUw=\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '100%',\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport function Form(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    children,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    ...other,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Form, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Aks/projects/student-records/src/components/useForm.js"],"names":["React","useState","makeStyles","useForm","initializeFValues","validateOnChange","validate","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","restForm","useStyles","theme","root","width","margin","spacing","Form","props","classes","children","other"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;;AAEA,OAAO,SAASC,OAAT,CAAiBC,iBAAjB,EAAqE;AAAA;;AAAA,MAAjCC,gBAAiC,uEAAhB,KAAgB;AAAA,MAATC,QAAS;AACxE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,iBAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAP,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACM,IAAD,GAAOC;AAFD,KAAD,CAAT;AAIA,QAAGT,gBAAH,EACIC,QAAQ,CAAC;AAAE,OAACO,IAAD,GAAQC;AAAV,KAAD,CAAR;AACP,GARD;;AAUA,QAAME,QAAQ,GAAG,MAAM;AACnBR,IAAAA,SAAS,CAACJ,iBAAD,CAAT;AACAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAHD;;AAKA,SAAM;AACFH,IAAAA,MADE;AAEFC,IAAAA,SAFE;AAGFC,IAAAA,MAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,iBALE;AAMFK,IAAAA;AANE,GAAN;AAQH;;GA3Beb,O;;AA6BhB,MAAMc,SAAS,GAAGf,UAAU,CAACgB,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACF,8BAA0B;AACtBC,MAAAA,KAAK,EAAC,MADgB;AAEtBC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFc;AADxB;AAD6B,CAAL,CAAN,CAA5B;AASA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AACvB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAO;AAACS,IAAAA,QAAD;AAAW,OAAGC;AAAd,MAAuBH,KAA9B;AACA,sBACI;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACN,IAAzB;AAA+B,IAAA,YAAY,EAAC,KAA5C;AAAA,OAAsDQ,KAAtD;AAAA,cACKH,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IAReH,I;UACIN,S;;;KADJM,I","sourcesContent":["import React, {useState} from \"react\";\r\nimport {makeStyles} from '@material-ui/core';\r\n\r\nexport function useForm(initializeFValues, validateOnChange=false, validate){\r\n    const [values, setValues] = useState(initializeFValues);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleInputChange = e => {\r\n        const {name, value} = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n        if(validateOnChange)\r\n            validate({ [name]: value })\r\n    }\r\n\r\n    const restForm = () => {\r\n        setValues(initializeFValues);\r\n        setErrors({})\r\n    }\r\n\r\n    return{\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        restForm\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& .MuiFormControl-root': {\r\n            width:'100%',\r\n            margin: theme.spacing(1)\r\n        }\r\n    }\r\n}))\r\n\r\nexport function Form(props){\r\n    const classes = useStyles();\r\n    const  {children, ...other} = props;\r\n    return(\r\n        <form className={classes.root} autoComplete=\"off\" {...other}>\r\n            {props.children}\r\n        </form>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}