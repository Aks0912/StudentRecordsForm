[{"C:\\Aks\\projects\\student-records\\src\\index.js":"1","C:\\Aks\\projects\\student-records\\src\\reportWebVitals.js":"2","C:\\Aks\\projects\\student-records\\src\\App.js":"3","C:\\Aks\\projects\\student-records\\src\\components\\SRPage\\StudentRecordPage.js":"4","C:\\Aks\\projects\\student-records\\src\\components\\SRForm\\StudentRecordForm.js":"5","C:\\Aks\\projects\\student-records\\src\\components\\useForm.js":"6","C:\\Aks\\projects\\student-records\\src\\components\\controls\\Input.js":"7","C:\\Aks\\projects\\student-records\\src\\components\\controls\\Button.js":"8","C:\\Aks\\projects\\student-records\\src\\components\\controls\\ActionButton.js":"9","C:\\Aks\\projects\\student-records\\src\\components\\Popup.js":"10","C:\\Aks\\projects\\student-records\\src\\components\\ConfirmDialog.js":"11","C:\\Aks\\projects\\Final\\src\\index.js":"12","C:\\Aks\\projects\\Final\\src\\components\\SRPage\\StudentRecordPage.js":"13","C:\\Aks\\projects\\Final\\src\\components\\Popup.js":"14","C:\\Aks\\projects\\Final\\src\\components\\ConfirmDialog.js":"15","C:\\Aks\\projects\\Final\\src\\components\\controls\\ActionButton.js":"16","C:\\Aks\\projects\\Final\\src\\components\\SRForm\\StudentRecordForm.js":"17","C:\\Aks\\projects\\Final\\src\\components\\controls\\Button.js":"18","C:\\Aks\\projects\\Final\\src\\components\\useForm.js":"19","C:\\Aks\\projects\\Final\\src\\components\\controls\\Input.js":"20"},{"size":280,"mtime":1637637349914,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":529,"mtime":1637219568941,"results":"24","hashOfConfig":"22"},{"size":6578,"mtime":1637642163651,"results":"25","hashOfConfig":"22"},{"size":3341,"mtime":1637645105565,"results":"26","hashOfConfig":"22"},{"size":1193,"mtime":1637644892000,"results":"27","hashOfConfig":"22"},{"size":414,"mtime":1637649914584,"results":"28","hashOfConfig":"22"},{"size":446,"mtime":1637256262966,"results":"29","hashOfConfig":"22"},{"size":848,"mtime":1637305556667,"results":"30","hashOfConfig":"22"},{"size":963,"mtime":1637311573106,"results":"31","hashOfConfig":"22"},{"size":984,"mtime":1637318178610,"results":"32","hashOfConfig":"22"},{"size":280,"mtime":1637637349914,"results":"33","hashOfConfig":"34"},{"size":6578,"mtime":1637642163651,"results":"35","hashOfConfig":"34"},{"size":963,"mtime":1637311573106,"results":"36","hashOfConfig":"34"},{"size":984,"mtime":1637318178610,"results":"37","hashOfConfig":"34"},{"size":848,"mtime":1637305556667,"results":"38","hashOfConfig":"34"},{"size":3341,"mtime":1637645105565,"results":"39","hashOfConfig":"34"},{"size":446,"mtime":1637256262966,"results":"40","hashOfConfig":"34"},{"size":1193,"mtime":1637644892000,"results":"41","hashOfConfig":"34"},{"size":414,"mtime":1637649914584,"results":"42","hashOfConfig":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"67wnj1",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cfbcqm",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Aks\\projects\\student-records\\src\\index.js",[],"C:\\Aks\\projects\\student-records\\src\\reportWebVitals.js",[],"C:\\Aks\\projects\\student-records\\src\\App.js",[],["88","89"],"C:\\Aks\\projects\\student-records\\src\\components\\SRPage\\StudentRecordPage.js",["90"],"import './StudentRecordPage.scss';\r\nimport '@material/react-layout-grid/index.scss';\r\nimport { useState} from 'react';\r\nimport { Cell, Grid, Row } from '@material/react-layout-grid';\r\nimport { Table, TableHead, TableBody, TableCell, TableRow, List } from '@material-ui/core';\r\nimport {Paper, makeStyles, Divider} from '@material-ui/core';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StudentRecordForm from '../SRForm/StudentRecordForm';\r\nimport ActionButton from '../../components/controls/ActionButton';\r\nimport Popup from '../Popup';\r\nimport ConfirmDialog from '../ConfirmDialog';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    PageContent: {\r\n        width:'80%',\r\n        margin: '0 auto',\r\n        padding: theme.spacing(3)\r\n    }\r\n}))\r\n\r\nexport default function StudentRecordPage(props){\r\n    const classes = useStyles();\r\n    const [records, setRecords] = useState([])\r\n    const [studentRecordForEdit, setStudentRecordForEdit] = useState(null);\r\n    const [openPopup, setOpenPopup] = useState(false);    \r\n    const [confirmDialog, setConfirmDialog] = useState({ isOpen:false, title:'', subTitle:''});\r\n\r\n    const openInPopup = (item) => {      \r\n        setStudentRecordForEdit(item)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    const onDelete = id => {\r\n        setConfirmDialog({\r\n            ...confirmDialog, isOpen:false\r\n        })\r\n        handleRemoveItem(id);        \r\n    }\r\n\r\n    const saveStudentRecordHandler = (studentRecord) => {\r\n        setRecords([...records, studentRecord]);\r\n    }\r\n\r\n    const updateStudentRecordHandler = (studentRecord) => {\r\n        let newArr = [...records]\r\n        let index = records.findIndex(x => x.rollNo ===studentRecord.rollNo);\r\n        newArr[index] = studentRecord;\r\n        setRecords(newArr)\r\n        setOpenPopup(false)\r\n    }\r\n\r\n    const handleRemoveItem = (id) => {\r\n        setRecords(records.filter(item => item.rollNo !== id));\r\n    };\r\n\r\n    return(\r\n        <Paper className={classes.PageContent}>\r\n            <p className=\"title\">Simple Student Records</p>\r\n            <Divider/>\r\n            <Grid>\r\n                <Row>\r\n                    <Cell columns={5}>\r\n                        <StudentRecordForm saveStudentRecord={saveStudentRecordHandler}\r\n                                            studentRecordForEdit={studentRecordForEdit}\r\n                                            source=\"newRecord\" />\r\n                    </Cell>\r\n                    <Cell columns={7}>\r\n                        <div>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>FullName</TableCell>\r\n                                        <TableCell align=\"right\">Roll No.</TableCell>\r\n                                        <TableCell align=\"right\">Student Class</TableCell>\r\n                                        <TableCell align=\"right\">Total Subjects</TableCell>\r\n                                        <TableCell align=\"right\">Age</TableCell>\r\n                                        <TableCell> </TableCell>\r\n                                        <TableCell> </TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {records.map((row) => (\r\n                                        <TableRow key={row.rollNo} sx={{ '&:last-child td, &:last-child th': { border: 0 } }} >\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {row.fullName}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\">{row.rollNo}</TableCell>\r\n                                            <TableCell align=\"right\">{row.studentClass}</TableCell>\r\n                                            <TableCell align=\"right\">{row.totalSubjects}</TableCell>\r\n                                            <TableCell align=\"right\">{row.age}</TableCell>\r\n                                            <TableCell>\r\n                                                <ActionButton\r\n                                                    color = \"primary\"\r\n                                                    onClick = {() => openInPopup(row)} >\r\n                                                    <EditOutlinedIcon fontSize=\"small\"/>\r\n                                                </ActionButton>\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <ActionButton\r\n                                                    color = \"secondary\"\r\n                                                    onClick={()=> {setConfirmDialog({\r\n                                                        isOpen:true,\r\n                                                        title:\"Delete Student Record\",\r\n                                                        subTitle:\"Do you want to delete Student Record?\",\r\n                                                        onConfirm:()=>{onDelete(row.rollNo)}\r\n                                                    })}}>\r\n                                                    <CloseIcon fontSize=\"small\"/>\r\n                                                </ActionButton>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                            <Popup title=\"Edit Student Record\" \r\n                                    openPopup = {openPopup} \r\n                                    setOpenPopup = {setOpenPopup} >\r\n                                <StudentRecordForm saveStudentRecord={updateStudentRecordHandler}\r\n                                                   studentRecordForEdit={studentRecordForEdit} \r\n                                                   source=\"editRecord\"/>\r\n                            </Popup>\r\n                            <ConfirmDialog confirmDialog= {confirmDialog}\r\n                                            setConfirmDialog= {setConfirmDialog}/>\r\n                        </div>\r\n                    </Cell>\r\n                </Row>\r\n            </Grid>\r\n            \r\n        </Paper>\r\n    )\r\n}","C:\\Aks\\projects\\student-records\\src\\components\\SRForm\\StudentRecordForm.js",["91","92","93"],"import './StudentRecordForm.scss';\r\nimport {useForm, Form} from '../useForm';\r\nimport Input from '../controls/Input';\r\nimport Button from '../../components/controls/Button';\r\nimport { useEffect} from 'react';\r\n\r\nconst initializeFValues = {\r\n    fullName: '',\r\n    rollNo: '',\r\n    studentClass: '',\r\n    totalSubjects: '',\r\n    age: ''\r\n}\r\n\r\nfunction StudentRecordForm(props){\r\n    const {studentRecordForEdit} = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = {...errors}\r\n        if('fullName' in fieldValues)\r\n            temp.fullName= values.fullName ? \"\" : \"This field is required.\"\r\n        if('rollNo' in fieldValues)\r\n            temp.rollNo= values.rollNo?\"\": \"Enter only numbers.\"\r\n        if('studentClass' in fieldValues)\r\n            temp.studentClass= values.studentClass?\"\": \"This field is required.\"\r\n        if('totalSubjects' in fieldValues)\r\n            temp.totalSubjects= values.totalSubjects?\"\": \"This field is required.\"\r\n        if('age' in fieldValues)\r\n            temp.age= values.age?\"\": \"This field is required.\"\r\n        \r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if(fieldValues == values)\r\n            return Object.values(temp).every(x=> x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        restForm\r\n    } = useForm(initializeFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if(validate()){\r\n            props.saveStudentRecord(values);\r\n            restForm();\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(studentRecordForEdit != null){\r\n                setValues({...studentRecordForEdit\r\n            })\r\n        }\r\n           \r\n    }, [studentRecordForEdit])\r\n\r\n    const addButtons = (props.source === \"newRecord\") ?\r\n         <Button text = \"Submit\"  type=\"submit\" /> :\r\n         <div>\r\n             <Button text = \"Save\"  type=\"submit\" /> \r\n         </div>\r\n\r\n    return(\r\n        <Form onSubmit= {handleSubmit}>\r\n            <Input\r\n                name= \"fullName\"\r\n                label= \"Full Name:\"\r\n                value= {values.fullName}\r\n                error= {errors.fullName}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"rollNo\"\r\n                label= \"Rollno:\"\r\n                value= {values.rollNo}\r\n                error= {errors.rollNo}\r\n                onChange= {handleInputChange} />\r\n                \r\n            <Input\r\n                name= \"studentClass\"\r\n                label= \"Student Class:\"\r\n                value= {values.studentClass}\r\n                error= {errors.studentClass}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"totalSubjects\"\r\n                label= \"Total Subjects:\"\r\n                value= {values.totalSubjects}\r\n                error= {errors.totalSubjects}\r\n                onChange= {handleInputChange} />\r\n\r\n            <Input\r\n                name= \"age\"\r\n                label= \"Age:\"\r\n                value= {values.age}\r\n                error= {errors.age}\r\n                onChange= {handleInputChange} />\r\n\r\n            <div>\r\n                {addButtons}\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default StudentRecordForm;","C:\\Aks\\projects\\student-records\\src\\components\\useForm.js",[],"C:\\Aks\\projects\\student-records\\src\\components\\controls\\Input.js",["94"],"import { TextField } from \"@material-ui/core\";\r\n\r\nexport default function(props){\r\n    const {name, label, value, error=null, onChange} = props;\r\n\r\n    return(\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label={label}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            {...(error && {error:true, helperText:error})}\r\n        />\r\n       \r\n    )\r\n}","C:\\Aks\\projects\\student-records\\src\\components\\controls\\Button.js",[],["95","96"],"C:\\Aks\\projects\\student-records\\src\\components\\controls\\ActionButton.js",[],"C:\\Aks\\projects\\student-records\\src\\components\\Popup.js",[],"C:\\Aks\\projects\\student-records\\src\\components\\ConfirmDialog.js",[],"C:\\Aks\\projects\\Final\\src\\index.js",[],"C:\\Aks\\projects\\Final\\src\\components\\SRPage\\StudentRecordPage.js",["97"],"C:\\Aks\\projects\\Final\\src\\components\\Popup.js",[],"C:\\Aks\\projects\\Final\\src\\components\\ConfirmDialog.js",[],"C:\\Aks\\projects\\Final\\src\\components\\controls\\ActionButton.js",[],"C:\\Aks\\projects\\Final\\src\\components\\SRForm\\StudentRecordForm.js",["98","99","100"],"C:\\Aks\\projects\\Final\\src\\components\\controls\\Button.js",[],"C:\\Aks\\projects\\Final\\src\\components\\useForm.js",[],"C:\\Aks\\projects\\Final\\src\\components\\controls\\Input.js",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":5,"column":60,"nodeType":"108","messageId":"109","endLine":5,"endColumn":64},{"ruleId":"110","severity":1,"message":"111","line":35,"column":24,"nodeType":"112","messageId":"113","endLine":35,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":36,"column":52,"nodeType":"112","messageId":"113","endLine":36,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":62,"column":8,"nodeType":"116","endLine":62,"endColumn":30,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":1,"nodeType":"120","endLine":17,"endColumn":2},{"ruleId":"102","replacedBy":"121"},{"ruleId":"104","replacedBy":"122"},{"ruleId":"106","severity":1,"message":"107","line":5,"column":60,"nodeType":"108","messageId":"109","endLine":5,"endColumn":64},{"ruleId":"110","severity":1,"message":"111","line":35,"column":24,"nodeType":"112","messageId":"113","endLine":35,"endColumn":26},{"ruleId":"110","severity":1,"message":"111","line":36,"column":52,"nodeType":"112","messageId":"113","endLine":36,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":62,"column":8,"nodeType":"116","endLine":62,"endColumn":30,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"119","line":3,"column":1,"nodeType":"120","endLine":17,"endColumn":2},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'List' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["126"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["124"],["125"],["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},"Update the dependencies array to be: [setValues, studentRecordForEdit]",{"range":"131","text":"132"},{"range":"133","text":"132"},[1771,1793],"[setValues, studentRecordForEdit]",[1771,1793]]